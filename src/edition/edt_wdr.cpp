//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: edt.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
    #pragma implementation "edt_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "edt_wdr.h"

#include <wx/intl.h>

// Euro sign hack of the year
#if wxUSE_UNICODE
    #define __WDR_EURO__ wxT("\u20ac")
#else
    #if defined(__WXMAC__)
        #define __WDR_EURO__ wxT("\xdb")
    #elif defined(__WXMSW__)
        #define __WDR_EURO__ wxT("\x80")
    #else
        #define __WDR_EURO__ wxT("\xa4")
    #endif
#endif

// Custom source
#include "mus/mustoolpanel.h"
#include "edt.h"

// Implement window functions

wxSizer *WindowFunc5( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 1, 0, 0 );
    item0->AddGrowableCol( 0 );
    item0->AddGrowableRow( 2 );

    wxStaticLine *item1 = new wxStaticLine( parent, ID5_LINE, wxDefaultPosition, wxSize(20,-1), wxLI_HORIZONTAL );
    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxBOTTOM, 5 );

    MusToolPanel *item2 = new MusToolPanel( parent, ID5_TOOLPANEL, wxDefaultPosition, wxSize(10,10), 0 );
    item0->Add( item2, 0, 0, 5 );

    EdtPanel *item3 = new EdtPanel( parent, ID5_MUSPANEL, wxDefaultPosition, wxSize(200,160), wxSUNKEN_BORDER );
    item0->Add( item3, 0, wxGROW|wxLEFT|wxRIGHT|wxBOTTOM, 0 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

// Implement menubar functions

wxMenuBar *MenuBarFunc5()
{
    wxMenuBar *item0 = new wxMenuBar;
    
    wxMenu* item1 = new wxMenu;
    item1->AppendSeparator();
    item1->Append( ID5_OPEN_MLF, _("Import &MLF"), wxT("") );
    item1->Append( ID5_OPEN_WWG, _("Import &WWG"), wxT("") );
    item1->AppendSeparator();
    item1->Append( ID5_SAVE_MLF, _("Export MLF"), wxT("") );
    item1->Append( ID5_SAVE_WWG, _("Export WWG"), wxT("") );
    item1->Append( ID5_SAVE_MEI, _("Export MEI"), wxT("") );
    item1->Append( ID5_SAVE_MODEL, _("Export music model"), wxT("") );
    item1->Append( ID5_SAVE_SVG, _("Export SVG (page)"), wxT("") );
    item0->Append( item1, _("commun1") );
    
    wxMenu* item2 = new wxMenu;
    item0->Append( item2, _("commun2") );
    
    wxMenu* item3 = new wxMenu;
    item3->Append( ID5_PREVIOUS, _("&Previous page"), _("Go to the previous page") );
    item3->Append( ID5_NEXT, _("&Next page"), _("Go to the next page") );
    item3->Append( ID5_GOTO, _("&Go to page ..."), _("Select a page in the file") );
    item3->AppendSeparator();
    item3->Append( ID5_ZOOMOUT, _("Zoom out\t-"), _("Zoom out the page") );
    item3->Append( ID5_ZOOMIN, _("Zoom in\t+"), _("Zoom in the page") );
    item0->Append( item3, _("&Page") );
    
    wxMenu* item4 = new wxMenu;
    item4->Append( ID5_INSERT_MODE, _("&Insertion"), wxT(""), wxITEM_CHECK );
    item4->Append( ID5_NOTES, _("&Notes and rests"), wxT("") );
    item4->Append( ID5_KEYS, _("&Keys"), wxT("") );
    item4->Append( ID5_SIGNS, _("&Propostions"), wxT("") );
    item4->Append( ID5_SYMBOLES, _("&Symboles"), wxT("") );
    item4->AppendSeparator();
    item4->Append( ID5_VOICES, _("&Voices"), wxT("") );
    item0->Append( item4, _("&Tools") );
    
    return item0;
}

// Implement toolbar functions

// Implement bitmap functions


// End of generated file
