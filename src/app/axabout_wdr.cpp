//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: axabout.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
    #pragma implementation "axabout_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "axabout_wdr.h"

#include <wx/intl.h>

// Euro sign hack of the year
#if wxUSE_UNICODE
    #define __WDR_EURO__ wxT("\u20ac")
#else
    #if defined(__WXMAC__)
        #define __WDR_EURO__ wxT("\xdb")
    #elif defined(__WXMSW__)
        #define __WDR_EURO__ wxT("\x80")
    #else
        #define __WDR_EURO__ wxT("\xa4")
    #endif
#endif

// Implement window functions

wxSizer *AboutDlgFunc( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxBoxSizer *item1 = new wxBoxSizer( wxHORIZONTAL );

    wxBoxSizer *item2 = new wxBoxSizer( wxVERTICAL );

    wxStaticBitmap *item3 = new wxStaticBitmap( parent, ID0_LOGO, Void( 0 ), wxDefaultPosition, wxSize(128,128) );
    item2->Add( item3, 0, wxALIGN_CENTER|wxALL, 5 );

    item2->Add( 20, 20, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item4 = new wxButton( parent, wxID_OK, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item4->SetDefault();
    item2->Add( item4, 0, wxALIGN_CENTER|wxALL, 5 );

    item1->Add( item2, 0, wxALIGN_CENTER|wxALL, 5 );

    wxFlexGridSizer *item5 = new wxFlexGridSizer( 1, 0, 0 );

    wxBoxSizer *item6 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item7 = new wxStaticText( parent, ID0_TEXT, _("ARUSPIX"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->Add( item7, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxLEFT|wxTOP, 5 );

    wxStaticText *item8 = new wxStaticText( parent, TX_APP_VERSION, wxT(""), wxDefaultPosition, wxSize(100,-1), 0 );
    item6->Add( item8, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxTOP, 5 );

    item5->Add( item6, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxStaticLine *item9 = new wxStaticLine( parent, ID0_LINE, wxDefaultPosition, wxSize(20,-1), wxLI_HORIZONTAL );
    item5->Add( item9, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxBoxSizer *item10 = new wxBoxSizer( wxHORIZONTAL );

    wxStaticText *item11 = new wxStaticText( parent, ID0_TEXT, _("Build"), wxDefaultPosition, wxDefaultSize, 0 );
    item10->Add( item11, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxLEFT|wxTOP, 5 );

    wxStaticText *item12 = new wxStaticText( parent, TX_APP_BUILD, wxT(""), wxDefaultPosition, wxSize(200,-1), 0 );
    item10->Add( item12, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxTOP, 5 );

    item5->Add( item10, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    wxStaticLine *item13 = new wxStaticLine( parent, ID0_LINE, wxDefaultPosition, wxSize(20,-1), wxLI_HORIZONTAL );
    item5->Add( item13, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticText *item14 = new wxStaticText( parent, ID0_TEXT, _("Credits"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->Add( item14, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxTOP, 5 );

    wxWindow *item15 = parent->FindWindow( ID0_WXWIDGETS );
    wxASSERT( item15 );
    item5->Add( item15, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxWindow *item16 = parent->FindWindow( ID0_TORCH );
    wxASSERT( item16 );
    item5->Add( item16, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxWindow *item17 = parent->FindWindow( ID0_IM );
    wxASSERT( item17 );
    item5->Add( item17, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxWindow *item18 = parent->FindWindow( ID0_WG );
    wxASSERT( item18 );
    item5->Add( item18, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxWindow *item19 = parent->FindWindow( ID0_LIBMEI );
    wxASSERT( item19 );
    item5->Add( item19, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    item5->Add( 350, 5, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item20 = new wxStaticText( parent, TX_APP_COPYRIGHT, _("Copyright"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->Add( item20, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 5 );

    wxStaticText *item21 = new wxStaticText( parent, TX_APP_LICENSE, _("License"), wxDefaultPosition, wxDefaultSize, 0 );
    item5->Add( item21, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxBoxSizer *item22 = new wxBoxSizer( wxHORIZONTAL );

    item5->Add( item22, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    item1->Add( item5, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticLine *item23 = new wxStaticLine( parent, ID0_LINE, wxDefaultPosition, wxSize(20,-1), wxLI_HORIZONTAL );
    item0->Add( item23, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxBoxSizer *item24 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item25 = new wxStaticText( parent, TX_APP_CONTRIBUTORS, _("Contributors:"), wxDefaultPosition, wxDefaultSize, wxST_NO_AUTORESIZE );
    item24->Add( item25, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT|wxTOP, 10 );

    wxTextCtrl *item26 = new wxTextCtrl( parent, ID0_CONTRIBUTORS, wxT(""), wxDefaultPosition, wxSize(80,100), wxTE_MULTILINE|wxTE_READONLY );
    item24->Add( item26, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 10 );

    item0->Add( item24, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 0 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

wxSizer *UpdateDlgFunc( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxStaticText *item1 = new wxStaticText( parent, TX_APP_NEW_VERSION, 
        _("A new version of Aruspix is available!\n"
          "\n"
          "You can download it using the following link:\n"
          ""),
        wxDefaultPosition, wxDefaultSize, wxST_NO_AUTORESIZE );
    item0->Add( item1, 1, wxALIGN_CENTER_VERTICAL|wxALL, 10 );

    wxWindow *item2 = parent->FindWindow( ID0_UPDATE_LINK );
    wxASSERT( item2 );
    item0->Add( item2, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 10 );

    wxStaticLine *item3 = new wxStaticLine( parent, ID0_LINE, wxDefaultPosition, wxSize(450,-1), wxLI_HORIZONTAL );
    item0->Add( item3, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item4 = new wxStaticText( parent, TX_APP_NEW_FEATURES, _("Changes:"), wxDefaultPosition, wxDefaultSize, wxST_NO_AUTORESIZE );
    item0->Add( item4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 10 );

    wxTextCtrl *item5 = new wxTextCtrl( parent, ID0_NEW_FEATURES, wxT(""), wxDefaultPosition, wxSize(80,200), wxTE_MULTILINE|wxTE_READONLY );
    item0->Add( item5, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 10 );

    wxButton *item6 = new wxButton( parent, wxID_OK, _("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item6->SetDefault();
    item0->Add( item6, 0, wxALIGN_CENTER|wxLEFT|wxRIGHT|wxBOTTOM, 10 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

// Implement menubar functions

// Implement toolbar functions

// Implement bitmap functions

wxBitmap Void( size_t index )
{
    if (index == 0)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 1 1",
        "a c Black",
        /* pixels */
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    return wxNullBitmap;
}


// End of generated file
