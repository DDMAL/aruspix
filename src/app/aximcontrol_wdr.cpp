//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: aximcontrol.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
    #pragma implementation "aximcontrol_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "aximcontrol_wdr.h"


// Euro sign hack of the year
#if wxUSE_UNICODE
    #define __WDR_EURO__ wxT("\u20ac")
#else
    #if defined(__WXMAC__)
        #define __WDR_EURO__ wxT("\xdb")
    #elif defined(__WXMSW__)
        #define __WDR_EURO__ wxT("\x80")
    #else
        #define __WDR_EURO__ wxT("\xa4")
    #endif
#endif

// Implement window functions

// Implement menubar functions

// Implement toolbar functions

void ViewToolBarFunc( wxToolBar *parent )
{
    parent->SetMargins( 2, 2 );
    
    parent->AddTool( ID_CONTROLLER_PREVIOUS, wxT(""), ViewBitmapsFunc( 0 ), wxNullBitmap, wxITEM_NORMAL, wxT("Previous page"), wxT("Go to the previous page in the file or directory") );
    parent->AddTool( ID_CONTROLLER_NEXT, wxT(""), ViewBitmapsFunc( 2 ), wxNullBitmap, wxITEM_NORMAL, wxT("Next page"), wxT("Go to the next page in the file or directory") );
    parent->AddSeparator();
    parent->AddTool( ID_CONTROLLER_ZOOM_OUT, wxT(""), ViewBitmapsFunc( 4 ), wxNullBitmap, wxITEM_NORMAL, wxT("Zoom out"), wxT("Zoom out") );
    parent->AddTool( ID_CONTROLLER_ZOOM_IN, wxT(""), ViewBitmapsFunc( 5 ), wxNullBitmap, wxITEM_NORMAL, wxT("Zoom in"), wxT("Zoom in") );
    parent->AddSeparator();
    parent->AddTool( ID_CONTROLLER_ADJUST_VH, wxT(""), ViewBitmapsFunc( 6 ), wxNullBitmap, wxITEM_CHECK, wxT("Adjust size"), wxT("Adjust size to fit image to window") );
    parent->AddTool( ID_CONTROLLER_ADJUST_V, wxT(""), ViewBitmapsFunc( 7 ), wxNullBitmap, wxITEM_CHECK, wxT("Adjust size vertically"), wxT("Adjust size to fit image to window height") );
    parent->AddTool( ID_CONTROLLER_ADJUST_H, wxT(""), ViewBitmapsFunc( 8 ), wxNullBitmap, wxITEM_CHECK, wxT("Adjust size horizontally"), wxT("Adjust size to fit image to window width") );
    
    parent->Realize();
}

// Implement bitmap functions

wxBitmap ViewBitmapsFunc( size_t index )
{
    if (index == 0)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 3 1",
        "  c None",
        "a c Black",
        "b c #FFFFFF",
        /* pixels */
        "                ",
        "      aaaaaaa   ",
        "     aabbbbba   ",
        "    ababbbbba   ",
        "   aaaabbbbba   ",
        "   abbbbabbba   ",
        "   abbbaabbba   ",
        "   abbaaaaaba   ",
        "   abaaaaaaba   ",
        "   abbaaaaaba   ",
        "   abbbaabbba   ",
        "   abbbbabbba   ",
        "   abbbbbbbba   ",
        "   aaaaaaaaaa   ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 1)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 8 1",
        "  c None",
        "a c Black",
        "b c #636363",
        "c c #CECE63",
        "d c #F7EF7B",
        "e c #E7DE6B",
        "f c #949463",
        "h c #EFEFEF",
        /* pixels */
        "                ",
        "  ccccf         ",
        " cdddddf        ",
        "ccccccccccccccf ",
        "chhhhhhhhhhhhhf ",
        "cheddddadddeddf ",
        "chddedaadddddef ",
        "chdddaaaaaadddf ",
        "chdeaaaaaaadedf ",
        "chdddaaaaaadddf ",
        "chdeddaaddedddf ",
        "chdddedaddddedf ",
        "ccccccccccccccf ",
        "bbbbbbbbbbbbbbb ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 2)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 3 1",
        "  c None",
        "a c Black",
        "b c #FFFFFF",
        /* pixels */
        "                ",
        "   aaaaaaa      ",
        "   abbbbbaa     ",
        "   abbbbbaba    ",
        "   abbbbbaaaa   ",
        "   abbbabbbba   ",
        "   abbbaabbba   ",
        "   abaaaaabba   ",
        "   abaaaaaaba   ",
        "   abaaaaabba   ",
        "   abbbaabbba   ",
        "   abbbabbbba   ",
        "   abbbbbbbba   ",
        "   aaaaaaaaaa   ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 3)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 8 1",
        "  c None",
        "a c Black",
        "b c #636363",
        "c c #CECE63",
        "d c #F7EF7B",
        "e c #E7DE6B",
        "f c #949463",
        "h c #EFEFEF",
        /* pixels */
        "                ",
        "  ccccf         ",
        " cdddddf        ",
        "ccccccccccccccf ",
        "chhhhhhhhhhhhhf ",
        "cheddddadddeddf ",
        "chddeddaaedddef ",
        "chddaaaaaaddddf ",
        "chdeaaaaaaadedf ",
        "chddaaaaaaddddf ",
        "chdedddaadedddf ",
        "chdddedaddddedf ",
        "ccccccccccccccf ",
        "bbbbbbbbbbbbbbb ",
        "                "
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 4)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 6 1",
        "  c None",
        "a c Black",
        "b c #FFFFFF",
        "c c #000080",
        "d c #0000FF",
        "e c #C0C0C0",
        /* pixels */
        "    aaaa        ",
        "  aaeebeaa      ",
        " aeebbebbea     ",
        " abeeeebeea     ",
        "abeebeeeeeba    ",
        "aeeaaaaaaeba    ",
        "abeaaaaaaeea    ",
        "aebbeeeebbba    ",
        " abebebbeba     ",
        " aebbebebea     ",
        "  aaeeeeaacd    ",
        "    aaaa  dcdd  ",
        "           dccd ",
        "            dccd",
        "             dcd"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 5)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 6 1",
        "  c None",
        "a c Black",
        "b c #FFFFFF",
        "c c #000080",
        "d c #0000FF",
        "e c #C0C0C0",
        /* pixels */
        "    aaaa        ",
        "  aaeebeaa      ",
        " aeebbebbea     ",
        " abeeaabeea     ",
        "abeebaaeeeba    ",
        "aeeaaaaaaeba    ",
        "abeaaaaaaeea    ",
        "aebbeaaebbba    ",
        " abebaabeba     ",
        " aebbebebea     ",
        "  aaeeeeaacd    ",
        "    aaaa  dcdd  ",
        "           dccd ",
        "            dccd",
        "             dcd"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 6)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "15 15 3 1",
        "  c None",
        "a c Black",
        "b c #404040",
        /* pixels */
        "bbbbbbbbbbbbbbb",
        "b      a      b",
        "b     aaa     b",
        "b    aa aa    b",
        "b     a a     b",
        "b  a  a a  a  b",
        "b aaaaaaaaaaa b",
        "baa   a a   aab",
        "b aaaaaaaaaaa b",
        "b  a  a a  a  b",
        "b     a a     b",
        "b    aa aa    b",
        "b     aaa     b",
        "b      a      b",
        "bbbbbbbbbbbbbbb"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 7)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "15 15 3 1",
        "  c None",
        "a c Black",
        "b c #404040",
        /* pixels */
        "bbbbbbbbbbbbbbb",
        "b      a      b",
        "b     aaa     b",
        "b    aa aa    b",
        "b     a a     b",
        "b     a a     b",
        "b     a a     b",
        "b     a a     b",
        "b     a a     b",
        "b     a a     b",
        "b     a a     b",
        "b    aa aa    b",
        "b     aaa     b",
        "b      a      b",
        "bbbbbbbbbbbbbbb"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    if (index == 8)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "15 15 3 1",
        "  c None",
        "a c Black",
        "b c #404040",
        /* pixels */
        "bbbbbbbbbbbbbbb",
        "b             b",
        "b             b",
        "b             b",
        "b             b",
        "b  a       a  b",
        "b aaaaaaaaaaa b",
        "baa         aab",
        "b aaaaaaaaaaa b",
        "b  a       a  b",
        "b             b",
        "b             b",
        "b             b",
        "b             b",
        "bbbbbbbbbbbbbbb"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    return wxNullBitmap;
}


// End of generated file
